name: Deploy to VPS

on:  
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Clear folder
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.DEPLOY_HOST }}          # Adresse de l'hôte VPS où le déploiement doit avoir lieu
        username: ${{ secrets.DEPLOY_USER }}      # Nom d'utilisateur pour se connecter à l'hôte VPS
        password: ${{ secrets.DEPLOY_PASSWORD }}  # Mot de passe pour l'authentification
        script: |
            cd /home
            rm recettesfamille -r
    
    - name: Copy files via SSH
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.DEPLOY_HOST }}          # Adresse de l'hôte VPS où le déploiement doit avoir lieu
        username: ${{ secrets.DEPLOY_USER }}      # Nom d'utilisateur pour se connecter à l'hôte VPS
        password: ${{ secrets.DEPLOY_PASSWORD }}  # Mot de passe pour l'authentification
        source: "."                               # Répertoire source à copier
        target: /home/recettesfamille/      # Répertoire cible sur l'hôte VPS où les fichiers seront copiés

    - name: Deploy with Docker Compose
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.DEPLOY_HOST }}          # Adresse de l'hôte VPS où le déploiement doit avoir lieu
        username: ${{ secrets.DEPLOY_USER }}      # Nom d'utilisateur pour se connecter à l'hôte VPS
        password: ${{ secrets.DEPLOY_PASSWORD }}  # Mot de passe pour l'authentification
        script: |
            cd /home/recettesfamille/src
            echo "OPENAI_SECRET=${{ secrets.OPENAI_SECRET }}" > .env
            echo "DEEPSEEK_SECRET=${{ secrets.DEEPSEEK_SECRET }}" >> .env
            echo "EMAIL_BACKUP_DEST=${{ vars.EMAIL_BACKUP_DEST }}" >> .env
            echo "EMAIL_BACKUP_FROM=${{ vars.EMAIL_BACKUP_FROM }}" >> .env
            echo "DB_HOST_URL=${{ vars.DB_HOST_URL }}" >> .env
            echo "DB_HOST_PORT=${{ vars.DB_HOST_PORT }}" >> .env
            echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> .env

            docker builder prune -f
            docker image prune -f

            docker compose -f RecettesFamille.Docker/docker-compose-light.yml down
            docker compose -f RecettesFamille.Docker/docker-compose-light.yml --env-file .env up --build --no-cache -d
