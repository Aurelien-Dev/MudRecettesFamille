@using BitzArt.Blazor.Cookies
@using Blazored.LocalStorage
@using RecettesFamille.Components.Pages.RecetteBook.Components
@using RecettesFamille.Data.Repository.IRepositories
@using RecettesFamille.Dto.Models
@using RecettesFamille.Managers
@inherits LayoutComponentBase

@inject IDialogService DialogService
@inject ICookieService CookieService
@inject IHttpContextAccessor HttpContextAccessor
@inject IRecipeRepository RecipeRepository
@inject NavigationManager NavigationManager

<MudThemeProvider @ref="_mudThemeProvider" IsDarkMode="_isDarkMode" Theme="CustomThemeManager.Customtheme" />
<MudDialogProvider />
<MudSnackbarProvider />
<MudPopoverProvider />

<MudLayout>
    <MudAppBar Elevation="1" Dense="true">
        @* <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" /> *@
        <MudButton Href="/" Style="font-weight: bold;" Class="mud-typography mud-typography-body2" Color="Color.Inherit">Recettes famille</MudButton>
        <MudSpacer />

        @* <AuthorizeView Roles="Admin">
            <MudInput T="string" Placeholder="Demander une recette" Class="mud-button-text mud-button-text-inherit ms-4" Margin="Margin.Dense" />
            <MudSpacer />
        </AuthorizeView> *@

        <AuthorizeView Roles="Admin, Contributor">

            <MudIconButton OnClick="OpenNewRecipeDialog" Color="Color.Inherit" Variant="Variant.Text" Icon="@Icons.Material.Filled.AddBox" />
            <MudIconButton Href="gpt/import" Color="Color.Inherit" Variant="Variant.Text" Icon="@Icons.Material.Filled.UploadFile" />
            @* <MudToggleIconButton ToggledChanged="OnToggledChanged"
                                 Icon="@Icons.Material.Outlined.DarkMode"
                                 ToggledIcon="@Icons.Material.Filled.LightMode"
                                 ToggledColor="@Color.Error" Color="Color.Inherit" /> *@
        </AuthorizeView>

        <AuthorizeView Roles="Admin, Contributor">
            <MudIconButton Href="/Admin" Color="Color.Inherit" Variant="Variant.Text" Icon="@Icons.Material.Filled.Settings" />
        </AuthorizeView>

        <MudIconButton Href="Account/Logout" Color="Color.Inherit" Variant="Variant.Text" Icon="@Icons.Material.Filled.Logout" />

    </MudAppBar>

    <MudMainContent Class="mt-12 pa-4">
        <MudContainer MaxWidth="MaxWidth.Large">
            @Body
        </MudContainer>
    </MudMainContent>

</MudLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool _isDarkMode;
    private MudThemeProvider? _mudThemeProvider;

    protected override async Task OnInitializedAsync()
    {
        var cookie = await CookieService.GetAsync("userPreferenceDarkMode");
        bool userPreferenceDarkMode = bool.TryParse(cookie?.Value, out var result) && result;

        if (_mudThemeProvider != null)
        {
            _isDarkMode = userPreferenceDarkMode && await _mudThemeProvider.GetSystemPreference();
        }
    }

    private async Task OpenNewRecipeDialog()
    {
        var dialog = await DialogService.ShowAsync<DialogNewRecipe>();
        var result = await dialog.Result;

        if (result?.Canceled != false || result.Data == null)
        {
            return;
        }

        var recipe = await RecipeRepository.AddRecipe(new RecipeDto() { Name = result.Data?.ToString() ?? string.Empty });

        if (recipe != null)
        {
            NavigationManager.NavigateTo($"recette/{recipe.Id}");
        }
    }

    private async Task OnToggledChanged(bool isDark)
    {
        _isDarkMode = isDark;
        await CookieService.SetAsync("userPreferenceDarkMode", isDark.ToString(), new DateTimeOffset(DateTime.MaxValue));
        StateHasChanged();
    }
}