@page "/gpt/import/"

@using Microsoft.EntityFrameworkCore
@using Newtonsoft.Json
@using RecettesFamille.Components.RecetteBook.BlockDefinitions
@using RecettesFamille.Data
@using RecettesFamille.Data.EntityModel
@using RecettesFamille.Managers
@using System.Text.Json
@using System.Text.Json.Serialization.Metadata
@using System.ComponentModel.DataAnnotations



<MudForm Spacing="2">
    <MudGrid>
        <MudItem xs="12" sm="12">
            <MudPaper Class="pa-4">
                <MudGrid>
                    <MudItem xs="12">
                        <MudPaper Style="position:relative">
                            <MudOverlay Visible="@isWorkInProgress" DarkBackground="true" Absolute="true" Class="rounded">
                                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                            </MudOverlay>

                            <MudTextField @ref="multilineReference" T="string" Label="Recette" Variant="Variant.Outlined" Lines="40"
                                          Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Outlined.Delete" AdornmentColor="Color.Error"
                                          OnAdornmentClick="@(() => multilineReference.Clear())" @bind-Value="@recipeDescription" />
                        </MudPaper>
                    </MudItem>

                    <MudItem xs="12">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="ImportRecipe" Disabled="@isWorkInProgress">Converti la recette</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="CancelUpdateRecipe" Disabled="@(!isWorkInProgress)">Annuler</MudButton>
                    </MudItem>

                </MudGrid>
            </MudPaper>
        </MudItem>
    </MudGrid>

</MudForm>


@code {
    [Inject] NavigationManager navigationManager { get; set; } = null!;
    [Inject] GptRecipeConverterManager gptRecipeConverterManager { get; set; } = null!;
    [Inject] ApplicationDbContext dbContext { get; set; } = null!;

    private MudTextField<string> multilineReference = null!; // Reference to the multiline text field

    bool isWorkInProgress = false;
    [Required] string recipeDescription = string.Empty;
    CancellationTokenSource cancellationTokenSource = new CancellationTokenSource();

    public async Task ImportRecipe()
    {
        isWorkInProgress = true;
        try
        {
            (RecipeEntity recette, decimal cost) = await gptRecipeConverterManager.Convert(recipeDescription, cancellationTokenSource.Token);

            //applicationDbContext.Entry(recette).State = EntityState.Added;

            dbContext.Recettes.Update(recette);
            await dbContext.SaveChangesAsync(cancellationTokenSource.Token);

            navigationManager.NavigateTo($"/recette/{recette.Id}");
        }
        catch (OperationCanceledException)
        {
            // Handle cancellation
        }
        catch (Exception)
        {
            throw;
        }
        finally
        {
            isWorkInProgress = false;
            cancellationTokenSource.Dispose();
        }
    }

    public void CancelUpdateRecipe()
    {
        cancellationTokenSource?.Cancel();
    }
}